[{"path":"https://docs.ropensci.org/rOPTRAM/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to our_package","title":"Contributing to our_package","text":"First , thanks considering contributing our_package! üëç ‚Äôs people like make rewarding us - project maintainers - work our_package. üòä our_package open source project, maintained people care. directly funded . [website]: [citation]: [email]: silverm@post.bgu.ac.il","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Contributing to our_package","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/CONTRIBUTING.html","id":"how-you-can-contribute","dir":"","previous_headings":"","what":"How you can contribute","title":"Contributing to our_package","text":"several ways can contribute project. want know contribute open source projects like one, see Open Source Guide.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/CONTRIBUTING.html","id":"share-the-love-heart","dir":"","previous_headings":"How you can contribute","what":"Share the love ‚ù§Ô∏è","title":"Contributing to our_package","text":"Think our_package useful? Let others discover , telling person, via Mastodon blog post. Using our_package paper writing? Consider [citing ][citation].","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/CONTRIBUTING.html","id":"ask-a-question-interrobang","dir":"","previous_headings":"How you can contribute","what":"Ask a question ‚ÅâÔ∏è","title":"Contributing to our_package","text":"Using our_package got stuck? Browse [documentation][website] see can find solution. Still stuck? Post question issue GitHub. offer user support, ‚Äôll try best address , questions often lead better documentation discovery bugs. Want ask question private? Contact package maintainer [email][mailto:silverm@post.bug.ac.il].","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/CONTRIBUTING.html","id":"propose-an-idea-bulb","dir":"","previous_headings":"How you can contribute","what":"Propose an idea üí°","title":"Contributing to our_package","text":"idea new our_package feature? Take look [documentation][website] issue list see isn‚Äôt included suggested yet. , suggest idea issue GitHub. can‚Äôt promise implement idea, helps : Explain detail work. Keep scope narrow possible. See want contribute code idea well.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/CONTRIBUTING.html","id":"report-a-bug-bug","dir":"","previous_headings":"How you can contribute","what":"Report a bug üêõ","title":"Contributing to our_package","text":"Using our_package discovered bug? ‚Äôs annoying! Don‚Äôt let others experience report issue GitHub can fix . good bug report makes easier us , please include: operating system name version (e.g.¬†Mac OS 10.13.6). details local setup might helpful troubleshooting. Detailed steps reproduce bug.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/CONTRIBUTING.html","id":"improve-the-documentation-open_book","dir":"","previous_headings":"How you can contribute","what":"Improve the documentation üìñ","title":"Contributing to our_package","text":"Noticed typo website? Think function use better example? Good documentation makes difference, help improve welcome!","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/CONTRIBUTING.html","id":"the-website","dir":"","previous_headings":"How you can contribute > Improve the documentation üìñ","what":"The website","title":"Contributing to our_package","text":"[website][website] generated pkgdown. means don‚Äôt write html: content pulled together documentation code, vignettes, Markdown files, package DESCRIPTION _pkgdown.yml settings. know way around pkgdown, can propose file change improve documentation. , report issue can point right direction.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/CONTRIBUTING.html","id":"function-documentation","dir":"","previous_headings":"How you can contribute > Improve the documentation üìñ","what":"Function documentation","title":"Contributing to our_package","text":"Functions described comments near code translated documentation using roxygen2. want improve function description: Go R/ directory code repository. Look file name function. Propose file change update function documentation roxygen comments (starting #').","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/CONTRIBUTING.html","id":"contribute-code-pencil","dir":"","previous_headings":"How you can contribute","what":"Contribute code üìù","title":"Contributing to our_package","text":"Care fix bugs implement new functionality our_package? Awesome! üëè look issue list leave comment things want work . See also development guidelines .","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/CONTRIBUTING.html","id":"development-guidelines","dir":"","previous_headings":"","what":"Development guidelines","title":"Contributing to our_package","text":"try follow GitHub flow development. Fork repo clone computer. learn process, see guide. forked cloned project since worked , pull changes original repo clone using git pull upstream master. Open RStudio project file (.Rproj). Write code. Test code (bonus points adding unit tests). Document code (see function documentation ). Check code devtools::check() aim 0 errors warnings. Commit push changes. Submit pull request.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright ¬© 2007 Free Software Foundation, Inc.¬†<http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program‚Äìmake sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers‚Äô authors‚Äô protection, GPL clearly explains warranty free software. users‚Äô authors‚Äô sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users‚Äô freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"‚ÄúLicense‚Äù refers version 3 GNU General Public License. ‚ÄúCopyright‚Äù also means copyright-like laws apply kinds works, semiconductor masks. ‚ÄúProgram‚Äù refers copyrightable work licensed License. licensee addressed ‚Äú‚Äù. ‚ÄúLicensees‚Äù ‚Äúrecipients‚Äù may individuals organizations. ‚Äúmodify‚Äù work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called ‚Äúmodified version‚Äù earlier work work ‚Äúbased ‚Äù earlier work. ‚Äúcovered work‚Äù means either unmodified Program work based Program. ‚Äúpropagate‚Äù work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. ‚Äúconvey‚Äù work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays ‚ÄúAppropriate Legal Notices‚Äù extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"‚Äúsource code‚Äù work means preferred form work making modifications . ‚ÄúObject code‚Äù means non-source form work. ‚ÄúStandard Interface‚Äù means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. ‚ÄúSystem Libraries‚Äù executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. ‚ÄúMajor Component‚Äù, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . ‚ÄúCorresponding Source‚Äù work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work‚Äôs System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users‚Äô Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work‚Äôs users, third parties‚Äô legal rights forbid circumvention technological measures.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program‚Äôs source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 ‚Äúkeep intact notices‚Äù. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called ‚Äúaggregate‚Äù compilation resulting copyright used limit access legal rights compilation‚Äôs users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. ‚ÄúUser Product‚Äù either (1) ‚Äúconsumer product‚Äù, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, ‚Äúnormally used‚Äù refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. ‚ÄúInstallation Information‚Äù User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"‚ÄúAdditional permissions‚Äù terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered ‚Äúrestrictions‚Äù within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. ‚Äúentity transaction‚Äù transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party‚Äôs predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"‚Äúcontributor‚Äù copyright holder authorizes use License Program work Program based. work thus licensed called contributor‚Äôs ‚Äúcontributor version‚Äù. contributor‚Äôs ‚Äúessential patent claims‚Äù patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, ‚Äúcontrol‚Äù includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor‚Äôs essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, ‚Äúpatent license‚Äù express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). ‚Äúgrant‚Äù patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. ‚ÄúKnowingly relying‚Äù means actual knowledge , patent license, conveying covered work country, recipient‚Äôs use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license ‚Äúdiscriminatory‚Äù include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others‚Äô Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License ‚Äúlater version‚Äù applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy‚Äôs public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM ‚Äú‚Äù WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least ‚Äúcopyright‚Äù line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program‚Äôs commands might different; GUI interface, use ‚Äúbox‚Äù. also get employer (work programmer) school, , sign ‚Äúcopyright disclaimer‚Äù program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"rOPTRAM: Deriving Soil Moisture from Sentinel-2 Imagery","text":"rOPTRAM implements OPtical TRapezoid Model (OPTRAM) derive soil moisture based linear relation vegetation index, .e.¬†NDVI, Land Surface Temperature (LST). Short Wave Infra-red (SWIR) band used proxy LST. SWIR band transformed Swir Transformed Reflectance (STR). scatterplot NDVI vs.¬†STR used produce wet dry linear regression lines, slope/intercept coefficients lines comprise trapezoid. coefficients used new satellite image determine soil moisture. See: Sadeghi et al. (2017), Burdun et al. (2020), Ambrosone et al. (2020)","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM.html","id":"prerequisites","dir":"Articles","previous_headings":"Introduction","what":"Prerequisites","title":"rOPTRAM: Deriving Soil Moisture from Sentinel-2 Imagery","text":"small number commonly used R packages required use {rOPTRAM}. includes: base packages {tools} {utils} spatial packages {sf} {terra} data.frame plotting {dplyr}, {ggplot2} Also, allow {rOPTRAM} download Sentinel-2 images, clip study area, prepare necessary vegetation index STR products, R package {CDSE} (see Karaman (2023)) well {jsonlite} required.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM.html","id":"workflows","dir":"Articles","previous_headings":"","what":"Workflows","title":"rOPTRAM: Deriving Soil Moisture from Sentinel-2 Imagery","text":"Users can download Sentinel-2 tiles Copernicus manually, run thru steps one one produce OPTRAM trapezoid, predicted soil moisture maps. However, approach optimal. complete workflow can initiated single function call download, clip area interest, produce trapezoid coefficients. -inclusive approach highly recommended since processing Sentinel-2 data performed ‚Äúcloud‚Äù final products downloaded, greatly reducing download file sizes. recommended R package {CDSE} interfaces Copernicus DataSpace Ecosystem one two ways: Thru Scihub API. Thru openEO platform methods require registering Copernicus DataSpace","code":"remotes::install_github(\"ropensci/rOPTRAM\") library(rOPTRAM) ls(getNamespace('rOPTRAM')) # The {CDSE} and {jsonlite} packages are required for downloading Sentinel imagery from Copernicus DataSpace. library(\"CDSE\") library(\"jsonlite\")"},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM.html","id":"package-options","dir":"Articles","previous_headings":"","what":"Package options","title":"rOPTRAM: Deriving Soil Moisture from Sentinel-2 Imagery","text":"{rOPTRAM} package controlled several options, set automatically package first loads. defaults can viewed running function optram_options() without arguments: Users can override defaults calling function alternative values options. example, Sentinel images downloaded, default available image dates specified from_date to_date. Users can, instead, choose download images specific season follows: Now, images day/month from_date day/month to_date acquired, years date range. Three trapezoid fitting functions implemented {rOPTRAM}. default ‚Äúlinear‚Äù, users can change follows: default trapezoid plot shows scatter plot cloud vegetation index values vs SWIR Transformed Reflectance, points uniform color. plot can improved coloring points density within scatterplot. accomplished choosing set option ‚Äúplot_colors‚Äù ‚Äúcolors‚Äù:","code":"optram_options() #> [1] \"edge_points = TRUE\" #> [1] \"feature_col = ID\" #> [1] \"max_cloud = 12\" #> [1] \"max_tbl_size = 1e+06\" #> [1] \"period = seasonal\" #> [1] \"plot_colors = colors\" #> [1] \"remote = scihub\" #> [1] \"rm.hi.str = FALSE\" #> [1] \"rm.low.vi = FALSE\" #> [1] \"SWIR_band = 11\" #> [1] \"trapezoid_method = linear\" #> [1] \"veg_index = NDVI\" #> [1] \"vi_step = 0.005\" #> NULL optram_options(\"period\", \"seasonal\") #> [1] \"edge_points = TRUE\" #> [1] \"feature_col = ID\" #> [1] \"max_cloud = 12\" #> [1] \"max_tbl_size = 1e+06\" #> [1] \"period = seasonal\" #> [1] \"plot_colors = colors\" #> [1] \"remote = scihub\" #> [1] \"rm.hi.str = FALSE\" #> [1] \"rm.low.vi = FALSE\" #> [1] \"SWIR_band = 11\" #> [1] \"trapezoid_method = linear\" #> [1] \"veg_index = NDVI\" #> [1] \"vi_step = 0.005\" optram_options(\"trapezoid_method\", \"polynomial\") #> [1] \"edge_points = TRUE\" #> [1] \"feature_col = ID\" #> [1] \"max_cloud = 12\" #> [1] \"max_tbl_size = 1e+06\" #> [1] \"period = seasonal\" #> [1] \"plot_colors = colors\" #> [1] \"remote = scihub\" #> [1] \"rm.hi.str = FALSE\" #> [1] \"rm.low.vi = FALSE\" #> [1] \"SWIR_band = 11\" #> [1] \"trapezoid_method = polynomial\" #> [1] \"veg_index = NDVI\" #> [1] \"vi_step = 0.005\" optram_options(\"plot_colors\", \"colors\") #> [1] \"edge_points = TRUE\" #> [1] \"feature_col = ID\" #> [1] \"max_cloud = 12\" #> [1] \"max_tbl_size = 1e+06\" #> [1] \"period = seasonal\" #> [1] \"plot_colors = colors\" #> [1] \"remote = scihub\" #> [1] \"rm.hi.str = FALSE\" #> [1] \"rm.low.vi = FALSE\" #> [1] \"SWIR_band = 11\" #> [1] \"trapezoid_method = polynomial\" #> [1] \"veg_index = NDVI\" #> [1] \"vi_step = 0.005\""},{"path":[]},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM.html","id":"run-the-full-optram-model-procedure-with-a-single-function-call","dir":"Articles","previous_headings":"Main wrapper function","what":"Run the full OPTRAM model procedure with a single function call","title":"rOPTRAM: Deriving Soil Moisture from Sentinel-2 Imagery","text":"Registration Copernicus DataSpace done advance, OAuth credentials (clientid, secret) saved user‚Äôs home directory. Downloaded Sentinel-2 images saved S2_output_dir. example, outputs saved tempdir() Trapezoid coefficients","code":"from_date <- \"2022-05-01\" to_date <- \"2023-04-30\" output_dir <- tempdir() aoi <- sf::st_read(system.file(\"extdata\",                                \"lachish.gpkg\", package = \"rOPTRAM\")) optram_options(\"veg_index\", \"NDVI\") optram_options(\"trapezoid_method\", \"linear\") rmse <- optram(aoi,               from_date, to_date,               S2_output_dir = output_dir,               data_output_dir = output_dir) #> [1] \"RMSE for fitted trapezoid:\" #>    RMSE.wet  RMSE.dry #> 1 0.2747341 0.1407656 knitr::kable(rmse, caption = \"Trapezoid coefficients\")"},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM.html","id":"show-trapezoid-plot","dir":"Articles","previous_headings":"Main wrapper function","what":"Show trapezoid plot","title":"rOPTRAM: Deriving Soil Moisture from Sentinel-2 Imagery","text":"","code":"edges_df <- read.csv(file.path(output_dir, \"trapezoid_edges_lin.csv\")) df_file <- file.path(output_dir, \"VI_STR_data.rds\") full_df <- readRDS(df_file) pl <- plot_vi_str_cloud(full_df, edges_df) pl <- pl + ggplot2::ggtitle(\"Lachish area trapezoid plot\",                             subtitle = \"linear fitted\") ggplot2::ggsave(file.path(output_dir, \"trapezoid_lachish_linear.png\"),                 width = 18, height = 12, units = \"cm\") knitr::include_graphics(\"images/trapezoid_lachish_linear.png\")"},{"path":[]},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM.html","id":"the-same-procedure-as-the-wrapper-function-but-in-explicit-steps","dir":"Articles","previous_headings":"Step by step","what":"The same procedure as the wrapper function, but in explicit steps","title":"rOPTRAM: Deriving Soil Moisture from Sentinel-2 Imagery","text":"Acquire Sentinel 2 images within date range, crop AOI; Prepare SWIR Transformed Reflectance; Prepare data.frame Vegetation Index STR values; Activate options remove VI values zero option remove outlier STR values Get trapezoid coefficients scatterplot VI-STR pixels RMSE fitted trapezoid edges","code":"# Using the same dates, and aoi as previous example s2_file_list <- optram_acquire_s2(aoi,                             from_date, to_date,                             output_dir = output_dir) STR_list <- list.files(file.path(output_dir, \"STR\"),                       pattern = \".tif$\", full.names = TRUE) VI_list <- list.files(file.path(output_dir, \"NDVI\"),                       pattern = \".tif$\", full.names = TRUE) full_df <- optram_ndvi_str(STR_list, VI_list,                            output_dir = output_dir) rmse <- optram_wetdry_coefficients(full_df,                                    output_dir = output_dir) knitr::kable(rmse, caption = \"RMSE of fitted trapezoid edges\")"},{"path":[]},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM.html","id":"use-trapezoid-coefficients-vi-and-str-rasters-to-derive-soil-moisture-grid","dir":"Articles","previous_headings":"Soil Moisture Estimate","what":"Use trapezoid coefficients, VI, and STR rasters to derive soil moisture grid","title":"rOPTRAM: Deriving Soil Moisture from Sentinel-2 Imagery","text":"","code":"img_date <- \"2023-01-10\"   # After a rain VI_dir <- file.path(output_dir, \"NDVI\") STR_dir <- file.path(output_dir, \"STR\") data_dir <- output_dir SM <- optram_calculate_soil_moisture(img_date, VI_dir, STR_dir,                                      data_dir = data_dir)"},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM.html","id":"soil-moisture-plot","dir":"Articles","previous_headings":"Soil Moisture Estimate","what":"Soil moisture plot","title":"rOPTRAM: Deriving Soil Moisture from Sentinel-2 Imagery","text":"","code":"library(\"viridis\") library(\"terra\") names(SM) <- \"Lachish soil moisture\" SM[terra::values(SM) < 0] <- 0  terra::plot(SM, col = rev(viridis::viridis(25)), smooth = TRUE,             main = \"Soil moisture map\") knitr::include_graphics(\"images/sm-plot.png\")"},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM_acquiring.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Acquiring Sentinel-2 Imagery","text":"{CSDE} package provides interface ‚ÄòCopernicus DataSpace Ecosystem‚Äô API, mainly searching catalog available data Copernicus Sentinel missions obtaining images just area interest based selected spectral bands. package uses ‚ÄòSentinel Hub‚Äô REST API interface Sentinel Hub provides access various satellite imagery archives. allows access raw satellite data, rendered images, statistical analysis, features. CDSE CRAN page OpenEO open-source project aimed standardizing simplifying access Earth observation data processing services. provides common API abstracts away complexities accessing processing Earth observation data, allowing users interact multiple back-end processing engines unified interface. openEO CRAN page methods require registering Copernicus DataSpace. vignette provides detailed guide acquiring Sentinel-2 imagery using CDSE (Copernicus Data Exploitation Platform - SciHub) openEO platform.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM_acquiring.html","id":"acquiring-sentinel-2-imagery-using-cdse","dir":"Articles","previous_headings":"","what":"Acquiring Sentinel-2 Imagery using CDSE","title":"Acquiring Sentinel-2 Imagery","text":"utilize CDSE package accessing Copernicus data, follow steps:","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM_acquiring.html","id":"step-1-install-required-packages","dir":"Articles","previous_headings":"Acquiring Sentinel-2 Imagery using CDSE","what":"Step 1: Install Required Packages","title":"Acquiring Sentinel-2 Imagery","text":"Ensure CDSE jsonlite packages installed:","code":"#remotes::install_github(\"ropensci/rOPTRAM\") library(rOPTRAM) if (!require(\"CDSE\")) install.packages(\"CDSE\", dependencies = TRUE) if (!require(\"jsonlite\")) install.packages(\"jsonlite\", dependencies = TRUE)"},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM_acquiring.html","id":"step-2-create-cdse-account-and-oauth-client","dir":"Articles","previous_headings":"Acquiring Sentinel-2 Imagery using CDSE","what":"Step 2: Create CDSE Account and OAuth Client","title":"Acquiring Sentinel-2 Imagery","text":"Navigate Copernicus portal. Click ‚ÄúRegister‚Äù button access account creation page. already registered, log account.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM_acquiring.html","id":"step-3-creating-oauth-client","dir":"Articles","previous_headings":"Acquiring Sentinel-2 Imagery using CDSE","what":"Step 3: Creating OAuth Client:","title":"Acquiring Sentinel-2 Imagery","text":"logging , go User Settings page. Click green ‚ÄúCreate New‚Äù button create new OAuth client. Enter suitable ‚ÄúClient Name‚Äù click ‚ÄúCreate Client‚Äù.  Client secret generated. Make sure copy new personal OAuth secret immediately created. able see later. Copy new client id.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM_acquiring.html","id":"step-4-saving-credentials","dir":"Articles","previous_headings":"Acquiring Sentinel-2 Imagery using CDSE","what":"Step 4: Saving Credentials:","title":"Acquiring Sentinel-2 Imagery","text":"Save client ID secret secure location. easiest option save credentials using store_cdse_credentials. Simply call appropriate client ID secret arguments. Alternatively, can set environment variables OAUTH_CLIENTID OAUTH_SECRET. Afterward, can utilize either optram_acquire_s2 acquire_scihub Alternatively, can use save_creds option. first run, set save_creds = TRUE enter clientid secret variables optram_acquire_s2 acquire_scihub functions automatically save credentials. , can use functions shown without needing insert credentials . choose use env option, can utilize either optram_acquire_s2 acquire_scihub. enable environment variable option, set save_creds = TRUE calling either function. , won‚Äôt need manually enter Client ID secret. code snippet might resemble following:","code":"# Example usage: store_cdse_credentials(clientid = \"your_client_id\", secret = \"your_secret_key\")  # Alternatively, after setting your environment variables, you can use them like this: store_cdse_credentials(Sys.getenv(\"OAUTH_CLIENTID\"), Sys.getenv(\"OAUTH_SECRET\")) # For this example, outputs are saved to `tempdir()` from_date <- \"2018-12-01\" to_date <- \"2019-04-30\" # aoi <- {sf} object, POLYGON or MULTIPOLYGON of AOI area # rOPTRAM_aoi_example aoi <- sf::st_read(system.file(\"extdata\",                                \"lachish.gpkg\", package = 'rOPTRAM'))  boa_files <- acquire_scihub(aoi,               from_date, to_date,               veg_index = \"SAVI\",               output_dir = tempdir(),               SWIR_band = 11) # For this example, outputs are saved to `tempdir()` from_date <- \"2018-12-01\" to_date <- \"2019-04-30\" # rOPTRAM_aoi_example optram_options(\"SWIR_band\", 11) optram_options(\"veg_index\", \"SAVI\") aoi <- sf::st_read(system.file(\"extdata\",                                \"lachish.gpkg\", package = 'rOPTRAM'))  boa_files <- acquire_scihub(aoi,               from_date, to_date,               veg_index = \"SAVI\",               output_dir = tempdir(),                # For the first run, uncomment below, and supply credentials...                # save_creds = TRUE,                # clientid = \"your_client_id\",                # secret = \"your_secret\"                ) from_date <- \"2018-12-01\" to_date <- \"2019-04-30\" # rOPTRAM_aoi_example aoi <- sf::st_read(system.file(\"extdata\",                                \"lachish.gpkg\", package = 'rOPTRAM'))  boa_files <- acquire_scihub(aoi,               from_date, to_date,               output_dir = tempdir(),                # For the first run, uncomment below                # save_creds = TRUE,              ) # It will trigger the store_cdse_credentials function from utilities.R, and your # credentials will be saved as a JSON file named cdse_credentials.json."},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM_acquiring.html","id":"step-5-acquire-sentinel-2-imagery","dir":"Articles","previous_headings":"Acquiring Sentinel-2 Imagery using CDSE","what":"Step 5: Acquire Sentinel-2 Imagery","title":"Acquiring Sentinel-2 Imagery","text":"downloads credentials needed. (saved user‚Äôs home directory)","code":"from_date <- \"2019-12-01\" to_date <- \"2020-04-30\" boa_files <- acquire_scihub(aoi, from_date, to_date,                output_dir = tempdir())"},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM_acquiring.html","id":"acquiring-sentinel-2-imagery-using-openeo","dir":"Articles","previous_headings":"","what":"Acquiring Sentinel-2 Imagery using openEO","title":"Acquiring Sentinel-2 Imagery","text":"use openEO accessing Copernicus data, follow steps:","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM_acquiring.html","id":"step-1-install-required-packages-1","dir":"Articles","previous_headings":"Acquiring Sentinel-2 Imagery using openEO","what":"Step 1: Install Required Packages","title":"Acquiring Sentinel-2 Imagery","text":"Ensure openeo package installed:","code":"# install.packages(\"openeo\") if (!require(\"openeo\")) install.packages(\"openeo\", dependencies = TRUE)"},{"path":[]},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM_acquiring.html","id":"registration-process","dir":"Articles","previous_headings":"Acquiring Sentinel-2 Imagery using openEO > Step 2: Connect to openEO Platform","what":"Registration Process:","title":"Acquiring Sentinel-2 Imagery","text":"detailed instructions register Copernicus Data Space, please visit: Registration Manual","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM_acquiring.html","id":"login-process","dir":"Articles","previous_headings":"Acquiring Sentinel-2 Imagery using openEO > Step 2: Connect to openEO Platform","what":"Login Process:","title":"Acquiring Sentinel-2 Imagery","text":". run acquire_openeo() function, internally calls check_openeo() function. openeo package installed, installed automatically. B. prompted, press enter proceed.  C. redirected Copernicus authentication page. Log grant access.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM_acquiring.html","id":"step-3-acquire-sentinel-2-imagery","dir":"Articles","previous_headings":"Acquiring Sentinel-2 Imagery using openEO","what":"Step 3: Acquire Sentinel-2 Imagery","title":"Acquiring Sentinel-2 Imagery","text":"can specify output_dir parameter indicate path downloaded processed imagery saved. example, outputs saved tempdir()","code":"from_date <- \"2018-12-01\" to_date <- \"2019-03-30\"  acquire_openeo(aoi, from_date, to_date,                output_dir = tempdir())"},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM_acquiring.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Acquiring Sentinel-2 Imagery","text":"vignette provides comprehensive instructions acquiring Sentinel-2 imagery using CDSE openEO platforms. Ensure necessary credentials packages installed access Copernicus data efficiently.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM_trapezoid_methods.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"rOPTRAM: Three Trapezoid Fitting Methods","text":"algorithm finding trapezoid wet dry edges works follows: acquiring time series Sentinel-2 images study area, vegetation index (.e.¬†NDVI SAVI), SWIR Transformed Reflectance (STR) rasters prepared. Pixel values indices images collected two column table (plotted scatterplot). vegetation axis (x-axis) split large number intervals (usually 50 - 100). width interval configurable user vi_step parameter optram_wetdry_coefficients(). interval top bottom 5% quantiles STR values determined. point values - VI STR - considered create fitted wet dry trapezoid edges. Three fitting methods available {rOPTRAM} prepare trapezoid wet dry edges. detailed background, see: Ma, Johansen, McCabe (2022). Users can choose linear OLS fitted line exponential fit second order polynomial fitting methods derived using lm function R {stats} package. linear OLS fit follows: STR=+s‚ãÖVISTR = + s \\cdot VI exponential fit uses equation: STR=‚ãÖe(s‚ãÖVI)STR = \\cdot e^{(s \\cdot VI)} STR fitted STR value, ii, ss exponential regression intercept, coefficient VIVI vegetation index value. polynomial fit uses: STR=Œ±+Œ≤1‚ãÖVI+Œ≤2‚ãÖVI2 STR = \\alpha + \\beta1 \\cdot VI + \\beta2 \\cdot VI^2 fitting method chosen setting trapezoid_method option using optram_options() function.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM_trapezoid_methods.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"rOPTRAM: Three Trapezoid Fitting Methods","text":"","code":"remotes::install_github(\"ropensci/rOPTRAM\") library(\"rOPTRAM\") library(\"CDSE\") library(\"jsonlite\")"},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM_trapezoid_methods.html","id":"prepare-data-frame-of-pixel-values","dir":"Articles","previous_headings":"Examples","what":"Prepare data.frame of pixel values","title":"rOPTRAM: Three Trapezoid Fitting Methods","text":"","code":"from_date <- \"2022-05-01\" to_date <- \"2023-04-30\" output_dir <- tempdir() aoi <- sf::st_read(system.file(\"extdata\",                             \"lachish.gpkg\", package = \"rOPTRAM\")) optram_options(\"veg_index\", \"NDVI\")  s2_file_list <- optram_acquire_s2(aoi,                             from_date, to_date,                             output_dir = output_dir) STR_list <- list.files(file.path(output_dir, \"STR\"),                       pattern = \".tif$\", full.names = TRUE) VI_list <- list.files(file.path(output_dir, \"NDVI\"),                       pattern = \".tif$\", full.names = TRUE) full_df <- optram_ndvi_str(STR_list, VI_list,                            output_dir = output_dir)"},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM_trapezoid_methods.html","id":"show-linear-trapezoid-plot","dir":"Articles","previous_headings":"Examples","what":"Show Linear trapezoid plot","title":"rOPTRAM: Three Trapezoid Fitting Methods","text":"Trapezoid scatterplot","code":"meth <- \"linear\" optram_options(\"trapezoid_method\", meth) #> [1] \"edge_points = TRUE\" #> [1] \"feature_col = ID\" #> [1] \"max_cloud = 12\" #> [1] \"max_tbl_size = 1e+06\" #> [1] \"period = full\" #> [1] \"plot_colors = no\" #> [1] \"remote = scihub\" #> [1] \"rm.hi.str = FALSE\" #> [1] \"rm.low.vi = FALSE\" #> [1] \"SWIR_band = 11\" #> [1] \"trapezoid_method = linear\" #> [1] \"veg_index = NDVI\" #> [1] \"vi_step = 0.005\" rmse <- optram_wetdry_coefficients(full_df,                                    output_dir = output_dir) edges_df <- read.csv(file.path(output_dir, \"trapezoid_edges_lin.csv\")) pl <- plot_vi_str_cloud(full_df,  edges_df = edges_df,                         edge_points = TRUE) pl <- pl + ggplot2::ggtitle(\"Lachish area trapezoid plot\",                             subtitle = paste(meth, \"fitted\")) ggplot2::ggsave(file.path(output_dir, paste0(\"trapezoid_lachish_\",                                              meth, \".png\")),                 width = 18, height = 12, units = \"cm\")"},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM_trapezoid_methods.html","id":"show-exponential-fitted-trapezoid-plot","dir":"Articles","previous_headings":"Examples","what":"Show Exponential fitted trapezoid plot","title":"rOPTRAM: Three Trapezoid Fitting Methods","text":"Exponential fit trapezoid scatterplot","code":"meth <- \"exponential\" optram_options(\"trapezoid_method\", meth) #> [1] \"edge_points = TRUE\" #> [1] \"feature_col = ID\" #> [1] \"max_cloud = 12\" #> [1] \"max_tbl_size = 1e+06\" #> [1] \"period = full\" #> [1] \"plot_colors = no\" #> [1] \"remote = scihub\" #> [1] \"rm.hi.str = FALSE\" #> [1] \"rm.low.vi = FALSE\" #> [1] \"SWIR_band = 11\" #> [1] \"trapezoid_method = exponential\" #> [1] \"veg_index = NDVI\" #> [1] \"vi_step = 0.005\" coeffs <- optram_wetdry_coefficients(full_df,                                      output_dir = output_dir) edges_df <- read.csv(file.path(output_dir, \"trapezoid_edges_exp.csv\")) pl <- plot_vi_str_cloud(full_df,  edges_df = edges_df,                         edge_points = TRUE) pl <- pl + ggplot2::ggtitle(\"Lachish area trapezoid plot\",                             subtitle = paste(meth, \"fitted\")) ggplot2::ggsave(file.path(output_dir, paste0(\"trapezoid_lachish_\",                                             meth, \".png\")),                 width = 18, height = 12, units = \"cm\")"},{"path":"https://docs.ropensci.org/rOPTRAM/articles/rOPTRAM_trapezoid_methods.html","id":"show-polynomial-fitted-trapezoid-plot","dir":"Articles","previous_headings":"Examples","what":"Show Polynomial fitted trapezoid plot","title":"rOPTRAM: Three Trapezoid Fitting Methods","text":"Polynomial fit trapezoid scatterplot","code":"meth <- \"polynomial\" optram_options(\"trapezoid_method\", meth) #> [1] \"edge_points = TRUE\" #> [1] \"feature_col = ID\" #> [1] \"max_cloud = 12\" #> [1] \"max_tbl_size = 1e+06\" #> [1] \"period = full\" #> [1] \"plot_colors = no\" #> [1] \"remote = scihub\" #> [1] \"rm.hi.str = FALSE\" #> [1] \"rm.low.vi = FALSE\" #> [1] \"SWIR_band = 11\" #> [1] \"trapezoid_method = polynomial\" #> [1] \"veg_index = NDVI\" #> [1] \"vi_step = 0.005\" coeffs <- optram_wetdry_coefficients(full_df,                                      output_dir = output_dir) edges_df <- read.csv(file.path(output_dir, \"trapezoid_edges_poly.csv\")) pl <- plot_vi_str_cloud(full_df,  edges_df = edges_df,                         edge_points = TRUE) pl <- pl + ggplot2::ggtitle(\"Lachish area trapezoid plot\",                             subtitle = paste(meth, \"fitted\")) ggplot2::ggsave(file.path(output_dir, paste0(\"trapezoid_lachish_\",                                              meth, \".png\")),                 width = 18, height = 12, units = \"cm\")"},{"path":"https://docs.ropensci.org/rOPTRAM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Micha Silver. Author, maintainer. Arnon Karnieli. Contributor, funder. Zhe Dong. Contributor. Ron Beiden. Contributor. Natalya Panov. Contributor. Zhe Dong. Contributor. Lauren O'Brien. Reviewer. Harry Eslick. Reviewer.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Silver M, Beiden R, Karnieli (2023). ‚ÄúrOPTRAM: R package preparing soil moisture grids based OPTRAM model.‚Äù doi:10.5281/zenodo.13257767.","code":"@Misc{,   title = {rOPTRAM: an R package for preparing soil moisture grids based on the OPTRAM model},   author = {Micha Silver and Ron Beiden and Arnon Karnieli},   year = {2023},   doi = {https://doi.org/10.5281/zenodo.13257767},   school = {Ben Gurion University}, }"},{"path":"https://docs.ropensci.org/rOPTRAM/index.html","id":"roptram-","dir":"","previous_headings":"","what":"Derive Soil Moisture Using the OPTRAM Algorithm","title":"Derive Soil Moisture Using the OPTRAM Algorithm","text":"rOPTRAM implements OPtical TRapezoid Model (OPTRAM) derive soil moisture based linear relation vegetation index, .e.¬†NDVI, Shortwave Infra-red (SWIR). SWIR band transformed SWIR Transformed Reflectance (STR). scatterplot NDVI vs.¬†STR used produce wet dry linear regression lines, slope/intercept coefficients lines comprise trapezoid. coefficients used new satellite image determine soil moisture. See: Sadeghi et al.¬†(2017), Burdun et al.¬†(2020), Ambrosone et al. (2020)","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Derive Soil Moisture Using the OPTRAM Algorithm","text":"rOPTRAM resides github. can install development version rOPTRAM like :","code":"# Install remotes package if (! require(\"remotes\")) {   install.packages(\"remotes\") } remotes::install_github(\"ropensci/rOPTRAM\")"},{"path":"https://docs.ropensci.org/rOPTRAM/index.html","id":"prerequisites","dir":"","previous_headings":"Installation","what":"Prerequisites","title":"Derive Soil Moisture Using the OPTRAM Algorithm","text":"small number commonly used R packages required use {rOPTRAM}. includes: - base packages {tools} {utils} - spatial packages {sf} {terra} - data.frame plotting {dplyr}, {ggplot2}, {MASS} Users can download Sentinel-2 tiles Copernicus manually, run thru steps produce OPTRAM trapezoid, predicted soil moisture maps. However, approach optimal. installing additional packages, workflow can initiated single function call download, clip area interest, produce trapezoid coefficients. -inclusive approach highly recommended since processing Sentinel-2 data performed ‚Äúcloud‚Äù final products downloaded, greatly reducing download file sizes. run -inclusive approach, first step acquiring Sentinel-2 imagery handled R package {CDSE}. (see Karaman (2023)). {jsonlite} package also necessary. R package interfaces Copernicus DataSpace Ecosystem one two ways: - Thru Scihub API. - Thru openEO platform methods require registering Copernicus DataSpace","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rOPTRAM/index.html","id":"optram_options","dir":"","previous_headings":"Available functions","what":"optram_options()","title":"Derive Soil Moisture Using the OPTRAM Algorithm","text":"Several package options defined, default values, {rOPTRAM} first loads. can set individually user chosen values. example, package uses vegetation index (compared SWIR Transformed Reflectance) values plot trapezoid. default index ‚ÄúNDVI‚Äù. low vegetation, arid region, users can choose alternative ‚ÄúSAVI‚Äù (see example ). default maximum cloud cover set 12 [%], users can choose value 0-100.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/index.html","id":"optram","dir":"","previous_headings":"Available functions","what":"optram()","title":"Derive Soil Moisture Using the OPTRAM Algorithm","text":"main wrapper function run whole OPTRAM procedure. function performs following steps: Acquire Sentinel 2 images covering requested date range, clipped input area interest. step relies {CDSE} package Create set SWIR Transformed Reflectance (STR) rasters; Prepare dataframe NDVI STR values pixels images; Calculate trapezoid wet dry regression lines, save coefficients CSV file. Returns: RMSE values fitted regression lines trapezoid.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/index.html","id":"optram_acquire_s2","dir":"","previous_headings":"Available functions","what":"optram_acquire_s2()","title":"Derive Soil Moisture Using the OPTRAM Algorithm","text":"Acquire Sentinel 2 images covering requested date range, clipped input area interest. Among function parameters, method can specified either ‚Äúscihub‚Äù ‚Äúopeneo‚Äù, thus choosing one two available acqquistion methods. Returns: list downloaded Sentinel 2 images","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/index.html","id":"optram_calculate_str","dir":"","previous_headings":"Available functions","what":"optram_calculate_str()","title":"Derive Soil Moisture Using the OPTRAM Algorithm","text":"Extracts required bands prepares vegetation index SWIR transformed reflectance.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/index.html","id":"optram_ndvi_str","dir":"","previous_headings":"Available functions","what":"optram_ndvi_str()","title":"Derive Soil Moisture Using the OPTRAM Algorithm","text":"Collects pixel values vegetation index STR rasters, acquisition dates, saves data.frame Returns: full data.frame","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/index.html","id":"optram_wetdry_coefficients","dir":"","previous_headings":"Available functions","what":"optram_wetdry_coefficients()","title":"Derive Soil Moisture Using the OPTRAM Algorithm","text":"Calculates wet-dry trapezoid data.frame NDVI STR values, obtains regression slope intercept lines Three possible fitting methods offered function, thru ‚Äútrapezoid_method‚Äù parameter. user can choose match upper (wet) lower (dry) bounds trapezoid either linear regression line, exponential curve, second order polynomial function. Returns: set four (six, case polynomial curve) coefficients.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/index.html","id":"optram_calculate_soil_moisture","dir":"","previous_headings":"Available functions","what":"optram_calculate_soil_moisture()","title":"Derive Soil Moisture Using the OPTRAM Algorithm","text":"Calculates soil moisture rasters time series images, using OPTRAM model coefficients procedure.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/index.html","id":"optram_landsat","dir":"","previous_headings":"Available functions","what":"optram_landsat()","title":"Derive Soil Moisture Using the OPTRAM Algorithm","text":"Prepares OPTRAM coefficients time series Landsat images, (instead Sentinel). function requires images downloaded advance. Returns: set four coefficients.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/index.html","id":"optram_safe","dir":"","previous_headings":"Available functions","what":"optram_safe()","title":"Derive Soil Moisture Using the OPTRAM Algorithm","text":"case Sentinel images downloaded advance, function prepares STR NDVI rasters, calculate trapezoid regression coefficients. requires input directory containing Sentinel 2 images original SAFE file format.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Derive Soil Moisture Using the OPTRAM Algorithm","text":"First, demonstration choosing non-default package options. Next basic example shows : retrieve Sentinel 2 imagery specific area interest covering date range preprocess imagery obtain vegetation index STR band use derive coefficients slope intercept OPTRAM trapezoid using ‚Äúlinear‚Äù fitting method","code":"# Show default options rOPTRAM::optram_options() #> [1] \"edge_points = TRUE\" #> [1] \"feature_col = ID\" #> [1] \"max_cloud = 12\" #> [1] \"max_tbl_size = 1e+06\" #> [1] \"only_vi_str = FALSE\" #> [1] \"overwrite = FALSE\" #> [1] \"period = full\" #> [1] \"plot_colors = no\" #> [1] \"remote = scihub\" #> [1] \"rm.hi.str = FALSE\" #> [1] \"rm.low.vi = FALSE\" #> [1] \"scm_mask = TRUE\" #> [1] \"SWIR_band = 11\" #> [1] \"tileid = NA\" #> [1] \"trapezoid_method = linear\" #> [1] \"veg_index = NDVI\" #> [1] \"vi_step = 0.005\" #> NULL # Change one options rOPTRAM::optram_options(\"veg_index\", \"SAVI\", show_opts = FALSE) #>  #> Option for: veg_index set to: SAVI library(rOPTRAM) # basic example aoi <- sf::st_read(system.file(\"extdata\", \"lachish.gpkg\", package=\"rOPTRAM\")) rmse <- rOPTRAM::optram(     aoi = aoi,     from_date = \"2021-01-01\", to_date = \"2021-03-30\",     max_cloud = 10) print(rmse)"},{"path":"https://docs.ropensci.org/rOPTRAM/index.html","id":"note","dir":"","previous_headings":"","what":"Note","title":"Derive Soil Moisture Using the OPTRAM Algorithm","text":"order download Sentinel 2 images, {CDSE} package used: (Karaman (2023)) package installed advance order run optram() wrapper function. , hand, Sentinel 2 imagery downloaded advance, {CDSE} strictly necessary. Instead, following workflow can used: call optram_safe() prepare NDVI STR rasters call optram_calculate_str() calculate SWIR Transform call optram_ndvi_str() build data.frame pixel values call optram_wetdry_coefficients() derive slope intercept trapezoid.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/index.html","id":"meta","dir":"","previous_headings":"","what":"Meta","title":"Derive Soil Moisture Using the OPTRAM Algorithm","text":"Please report issues github Anyone interested collaborating invited ‚Äúsign ‚Äù contacting maintainers. package released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/acquire_openeo.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility Function to Acquire Sentinel-2 Imagery using openEO ‚Äî acquire_openeo","title":"Utility Function to Acquire Sentinel-2 Imagery using openEO ‚Äî acquire_openeo","text":"non-exported function uses openeo package send request Copernicus DataSpace, prepare products. Called optram_acquire_s2","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/acquire_openeo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility Function to Acquire Sentinel-2 Imagery using openEO ‚Äî acquire_openeo","text":"","code":"acquire_openeo(   aoi,   from_date,   to_date,   output_dir = tempdir(),   scale_factor = 10000 )"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/acquire_openeo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility Function to Acquire Sentinel-2 Imagery using openEO ‚Äî acquire_openeo","text":"aoi, sf object, POLYGON MULTIPOLYGON area interest from_date, string, represents start date range, formatted \"YYYY-MM-DD\" to_date, string, end date range, formatted \"YYYY-MM-DD\" output_dir, string, path save downloaded, processed imagery scale_factor, integer, scaling factor EO data source default 10000 , scale Sentinel-2 15 bit DN range (0, 1)","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/acquire_openeo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility Function to Acquire Sentinel-2 Imagery using openEO ‚Äî acquire_openeo","text":"list BOA files","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/acquire_openeo.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Utility Function to Acquire Sentinel-2 Imagery using openEO ‚Äî acquire_openeo","text":"function utilizes openeo package. Instructions login process: First , authenticate account backend Copernicus Data Space Ecosystem, necessary complete registration process. Follow instructions registration: https://documentation.dataspace.copernicus.eu/Registration.html registered installed openeo package, can run acquire_openeo function. process connecting server logging , need follow steps: message \"Press  proceed:\" appears console, press enter. prompted 'Copy CTGB-UGFU paste requested browser' console, may appear can ignored, related older version openeo package. Calling method opens system web browser, can authenticate back-end authentication system. , website give instructions go back R client, connection logged account . means every call comes via connection variable executed user account. redirected https://identity.dataspace.copernicus.eu/. Ensure account logged . required grant access - press \"yes\".","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rOPTRAM/reference/acquire_scihub.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility Function to Acquire Sentinel-2 Imagery Using CDSE Package ‚Äî acquire_scihub","title":"Utility Function to Acquire Sentinel-2 Imagery Using CDSE Package ‚Äî acquire_scihub","text":"function uses CDSE package send request Copernicus Dataspace, prepare products. Called optram_acquire_s2","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/acquire_scihub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility Function to Acquire Sentinel-2 Imagery Using CDSE Package ‚Äî acquire_scihub","text":"","code":"acquire_scihub(   aoi,   from_date,   to_date,   output_dir = tempdir(),   save_creds = TRUE,   clientid = NULL,   secret = NULL )"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/acquire_scihub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility Function to Acquire Sentinel-2 Imagery Using CDSE Package ‚Äî acquire_scihub","text":"aoi, sf object, POLYGON MULTIPOLYGON area interest from_date, string, represents start date range, formatted \"YYYY-MM-DD\" to_date, string, end date range, formatted \"YYYY-MM-DD\" output_dir, string, path save downloaded, processed imagery save_creds, logical, whether save CDSE credentials. Default TRUE. clientid, string, user's OAuth client id. Required save_creds TRUE. secret, string, user's OAuth secret. Required save_creds TRUE.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/acquire_scihub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility Function to Acquire Sentinel-2 Imagery Using CDSE Package ‚Äî acquire_scihub","text":"list STR files","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/acquire_scihub.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Utility Function to Acquire Sentinel-2 Imagery Using CDSE Package ‚Äî acquire_scihub","text":"#' function utilizes CDSE package. Make sure install CDSE jsonlite packages. Create OAuth account token: Creating Account: Navigate https://dataspace.copernicus.eu/. Click \"Register\" button access account creation page. already registered, enter username password, click \"Login.\" logged , go User dashboard click \"User Settings\" access Settings page. Creating OAuth Client: Settings page, click green \"Create New\" button located right. Enter suitable \"Client Name\" click green \"Create Client\" button. Client secret generated. user must save secret clientid somewhere. credentials saved automatically standard filesystem location user calls store_cdse_credentials() clientid secret parameters. user chooses save credentials standard filesystem location, need add clientid secret acquire_scihub() function call. Using Credentials aquire_scihub: credentials stored using store_cdse_credentials(), credentials retrieved automatically. Otherwise, can utilize generated clientid secret https://dataspace.copernicus.eu/ within aquire_scihub() function. want store credentials computer, ensure running aquire_scihub(), save_creds parameter set 'TRUE'. first run aquire_scihub(), manually input clientid secret function signature. Subsequent runs use stored credentials. Subject Area Constraint: downloadable images restricted maximum size 2500 pixels side. limitation established due final resolution set 10 meters using JavaScript. Consequently, subject area available download limited 25 kilometers directions. Please aware restriction selecting desired area download. Area Interest (AOI) Specification: defining Area Interest (AOI), please ensure represented polygonal layer one feature. feature can either single POLYGON MULTIPOLYGON, may consist non-contiguous areas, one feature permissible.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rOPTRAM/reference/calculate_str.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate STR from SWIR Bottom of Atmosphere Band ‚Äî calculate_str","title":"Calculate STR from SWIR Bottom of Atmosphere Band ‚Äî calculate_str","text":"Use function prepare STR SAFE imagery already downloaded Sentinel 2 image files advance","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/calculate_str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate STR from SWIR Bottom of Atmosphere Band ‚Äî calculate_str","text":"","code":"calculate_str(img_stk, scale_factor = 10000)"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/calculate_str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate STR from SWIR Bottom of Atmosphere Band ‚Äî calculate_str","text":"img_stk, terra SpatRaster, multiband stack images, already clipped aoi scale_factor, integer, scaling factor EO data source default 10000, scale Sentinel-2 15 bit DN range (0, 1)","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/calculate_str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate STR from SWIR Bottom of Atmosphere Band ‚Äî calculate_str","text":"STR, SpatRaster STR band","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/calculate_str.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate STR from SWIR Bottom of Atmosphere Band ‚Äî calculate_str","text":"Landsat images, scale_factor 1, since Landsat metadata contains gain offset scaling image bands.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/calculate_str.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate STR from SWIR Bottom of Atmosphere Band ‚Äî calculate_str","text":"","code":"img_stk <- terra::rast(system.file(\"extdata\", \"BOA\",          \"BOA_2022-12-11_T36RXV.tif\", package = \"rOPTRAM\")) STR_dir = tempdir() str <- calculate_str(img_stk)"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/calculate_vi.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Vegetation Index from Bottom of Atmosphere Image Bands ‚Äî calculate_vi","title":"Calculate Vegetation Index from Bottom of Atmosphere Image Bands ‚Äî calculate_vi","text":"Use function prepare vegetation index SAFE imagery already downloaded Sentinel 2 image files advance","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/calculate_vi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Vegetation Index from Bottom of Atmosphere Image Bands ‚Äî calculate_vi","text":"","code":"calculate_vi(   img_stk,   redband = 4,   greenband = 3,   blueband = 2,   nirband = 5,   scale_factor = 2^15 )"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/calculate_vi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Vegetation Index from Bottom of Atmosphere Image Bands ‚Äî calculate_vi","text":"img_stk, terra SpatRaster, multiband stack images, already clipped aoi redband, integer, number red band greenband, integer, number green band blueband, integer, number blue band nirband, integer, number NIR band scale_factor, numeric, scales Sentinel-2 15 bit values range (0,255) expected vegetation indices default 32768 (2^15)","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/calculate_vi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Vegetation Index from Bottom of Atmosphere Image Bands ‚Äî calculate_vi","text":"vi_rast, SpatRaster vegetation index","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/calculate_vi.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate Vegetation Index from Bottom of Atmosphere Image Bands ‚Äî calculate_vi","text":"scale_factor parameter reduces numeric range \"digital number\", (DN) Sentinel-2 images 15 bit integer 8 bit. Vegetation indices SAVI expect values range (0, 255). scale_factor produces values range. using Landsat 8 images (DN already range (0, 255)) set scale_factor 255.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/calculate_vi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Vegetation Index from Bottom of Atmosphere Image Bands ‚Äî calculate_vi","text":"","code":"img_stk <- terra::rast(system.file(\"extdata\", \"BOA\",          \"BOA_2023-01-20_T36RXV.tif\", package = \"rOPTRAM\")) vi <- calculate_vi(img_stk)"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/crop_landsat_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Crop List of Landsat Bands to AOI ‚Äî crop_landsat_list","title":"Crop List of Landsat Bands to AOI ‚Äî crop_landsat_list","text":"Utility function prepare BOA bands cropped Area Interest.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/crop_landsat_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crop List of Landsat Bands to AOI ‚Äî crop_landsat_list","text":"","code":"crop_landsat_list(landsat_dir)"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/crop_landsat_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crop List of Landsat Bands to AOI ‚Äî crop_landsat_list","text":"landsat_dir, string, directory containing original downloaded Landsat imagery folders.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/crop_landsat_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crop List of Landsat Bands to AOI ‚Äî crop_landsat_list","text":"cropped_list, list, paths derived BOA stacks, cropped study area","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/crop_landsat_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Crop List of Landsat Bands to AOI ‚Äî crop_landsat_list","text":"","code":"if (FALSE) { # \\dontrun{ cropped_landsat_list <- crop_landsat_list(landsat_dir) } # }"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/exponential_coefficients.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility Function to Prepare Exponential Fitted Edges of Trapezoid ‚Äî exponential_coefficients","title":"Utility Function to Prepare Exponential Fitted Edges of Trapezoid ‚Äî exponential_coefficients","text":"Called optram_wetdry_coefficients prepare exponential curve along trapezoid edges. Calculates intercept slope wet dry edges updates edges data.frame exp fitted values. exported.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/exponential_coefficients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility Function to Prepare Exponential Fitted Edges of Trapezoid ‚Äî exponential_coefficients","text":"","code":"exponential_coefficients(df, output_dir)"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/exponential_coefficients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility Function to Prepare Exponential Fitted Edges of Trapezoid ‚Äî exponential_coefficients","text":"df, data.frame, values VI STR along edges trapezoid output_dir, string, path save coefficients CSV file","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/exponential_coefficients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility Function to Prepare Exponential Fitted Edges of Trapezoid ‚Äî exponential_coefficients","text":"df, data.frame, trapezoid line edge points fitted wet/dry values added","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/exponential_coefficients.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Utility Function to Prepare Exponential Fitted Edges of Trapezoid ‚Äî exponential_coefficients","text":"Three CSV files saved: regressions coefficients, trapezoid edge points RMSE fitted curve","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/exponential_coefficients.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility Function to Prepare Exponential Fitted Edges of Trapezoid ‚Äî exponential_coefficients","text":"","code":"if (FALSE) { # \\dontrun{   df <- read.csv(system.file(\"extdata\", \"trapezoid_edges.csv\",                 package = \"rOPTRAM\"))   output_dir <- tempdir()   coeffs <- rOPTRAM::exponential_coefficients(df, output_dir)   coeffs } # }"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/exponential_soil_moisture.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Soil Moisture Grid, Exponential Trapezoid ‚Äî exponential_soil_moisture","title":"Calculate Soil Moisture Grid, Exponential Trapezoid ‚Äî exponential_soil_moisture","text":"Prepare soil moisture grid STR VI images single date, based exponential function derive trapezoid edges, using derived slope intercept coefficients","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/exponential_soil_moisture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Soil Moisture Grid, Exponential Trapezoid ‚Äî exponential_soil_moisture","text":"","code":"exponential_soil_moisture(coeffs, VI, STR)"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/exponential_soil_moisture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Soil Moisture Grid, Exponential Trapezoid ‚Äî exponential_soil_moisture","text":"coeffs, list, 4 trapezoid coefficients VI, terra rast, vegetation index raster STR, terra rast, STR raster","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/exponential_soil_moisture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Soil Moisture Grid, Exponential Trapezoid ‚Äî exponential_soil_moisture","text":"rast, soil moisture grid","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/exponential_soil_moisture.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate Soil Moisture Grid, Exponential Trapezoid ‚Äî exponential_soil_moisture","text":"function used preparing OPTRAM model coefficients : optram_wetdry_coefficients. Typically new image date, (used preparing model), referenced img_date parameter. resulting soil moisture raster saved output_dir. function implements exponential trapezoid, following: Ambrosone, Mariapaola, et al. 2020. ‚ÄúRetrieving Soil Moisture Rainfed Irrigated Fields Using Sentinel-2 Observations Modified OPTRAM Approach.‚Äù International Journal Applied Earth Observation Geoinformation 89 (July): 102113. doi:10.1016/j.jag.2020.102113","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/exponential_soil_moisture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Soil Moisture Grid, Exponential Trapezoid ‚Äî exponential_soil_moisture","text":"","code":"img_date <- \"2023-03-11\" VI_dir <- system.file(\"extdata\", \"NDVI\", package = \"rOPTRAM\") STR_dir <- system.file(\"extdata\", \"STR\", package = \"rOPTRAM\") SM <- optram_calculate_soil_moisture(img_date,             VI_dir, STR_dir,             data_dir = tempdir()) #> No coefficients file, Exiting..."},{"path":"https://docs.ropensci.org/rOPTRAM/reference/linear_coefficients.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility Function to Prepare Linear Regression Edges of Trapezoid ‚Äî linear_coefficients","title":"Utility Function to Prepare Linear Regression Edges of Trapezoid ‚Äî linear_coefficients","text":"Called optram_wetdry_coefficients prepare linear regression line along trapezoid edges Calculates intercept slope wet dry edges exported","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/linear_coefficients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility Function to Prepare Linear Regression Edges of Trapezoid ‚Äî linear_coefficients","text":"","code":"linear_coefficients(df, output_dir)"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/linear_coefficients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility Function to Prepare Linear Regression Edges of Trapezoid ‚Äî linear_coefficients","text":"df, data.frame, values VI STR along edges trapezoid output_dir, string, path save coefficients CSV file","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/linear_coefficients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility Function to Prepare Linear Regression Edges of Trapezoid ‚Äî linear_coefficients","text":"df, data.frame, trapezoid line edge points fitted wet/dry values added","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/linear_coefficients.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Utility Function to Prepare Linear Regression Edges of Trapezoid ‚Äî linear_coefficients","text":"Three CSV files saved: regressions coefficients, trapezoid edge points RMSE fitted curve","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/linear_coefficients.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility Function to Prepare Linear Regression Edges of Trapezoid ‚Äî linear_coefficients","text":"","code":"if (FALSE) { # \\dontrun{ edges_file <- system.file(\"extdata/trapezoid_edges.csv\",                            package = \"rOPTRAM\") df <- read.csv(edges_file) output_dir <- tempdir() coeffs <- linear_coefficients(df, output_dir) coeffs } # }"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/linear_soil_moisture.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Soil Moisture Grid, Linear Trapezoid ‚Äî linear_soil_moisture","title":"Calculate Soil Moisture Grid, Linear Trapezoid ‚Äî linear_soil_moisture","text":"Prepare soil moisture grid STR VI images single date, using linear trapezoid method, using derived slope intercept coefficients","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/linear_soil_moisture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Soil Moisture Grid, Linear Trapezoid ‚Äî linear_soil_moisture","text":"","code":"linear_soil_moisture(coeffs, VI, STR)"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/linear_soil_moisture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Soil Moisture Grid, Linear Trapezoid ‚Äî linear_soil_moisture","text":"coeffs, list, 4 trapezoid coefficients VI, SpatRaster, vegetation index raster STR, SpatRaster, STR raster","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/linear_soil_moisture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Soil Moisture Grid, Linear Trapezoid ‚Äî linear_soil_moisture","text":"rast, soil moisture grid","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/linear_soil_moisture.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate Soil Moisture Grid, Linear Trapezoid ‚Äî linear_soil_moisture","text":"function used preparing OPTRAM model coefficients : optram_wetdry_coefficients. Typically new image date, (used preparing model), referenced img_date parameter. resulting soil moisture raster saved output_dir.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/linear_soil_moisture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Soil Moisture Grid, Linear Trapezoid ‚Äî linear_soil_moisture","text":"","code":"img_date <- \"2023-03-11\" VI_dir <- system.file(\"extdata\", \"NDVI\", package = \"rOPTRAM\") STR_dir <- system.file(\"extdata\", \"STR\", package = \"rOPTRAM\") SM <- optram_calculate_soil_moisture(img_date,             VI_dir, STR_dir,             data_dir = tempdir()) #> No coefficients file, Exiting..."},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Sentinel Imagery for Soil Moisture Prediction Using OPTRAM. ‚Äî optram","title":"Prepare Sentinel Imagery for Soil Moisture Prediction Using OPTRAM. ‚Äî optram","text":"main wrapper function download, preprocess Sentinel 2 imagery prepare OPTRAM trapezoid derive slope intercept wet dry trapezoid lines. See: Sadeghi, M., Babaeian, E., Tuller, M., Jones, S.B., 2017. optical trapezoid model: novel approach remote sensing soil moisture applied Sentinel-2 Landsat-8 observations. Remote Sensing Environment 198, 52‚Äì68, doi:10.1016/j.rse.2017.05.041","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Sentinel Imagery for Soil Moisture Prediction Using OPTRAM. ‚Äî optram","text":"","code":"optram(   aoi,   from_date,   to_date,   S2_output_dir = tempdir(),   data_output_dir = tempdir() )"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Sentinel Imagery for Soil Moisture Prediction Using OPTRAM. ‚Äî optram","text":"aoi, sf object, POLYGON MULTIPOLYGON, boundary area interest from_date, string, start date range, Formatted \"YYYY-MM-DD\" to_date, end date range. S2_output_dir, string, directory save downloaded S2 derived products, defaults tempdir() data_output_dir, string, path save coeffs_file STR-VI data.frame, default tempdir()","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Sentinel Imagery for Soil Moisture Prediction Using OPTRAM. ‚Äî optram","text":"rmse_df, data.frame, RMSE values fitted trapezoid lines coefficients also saved csv file data_output_dir.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Prepare Sentinel Imagery for Soil Moisture Prediction Using OPTRAM. ‚Äî optram","text":"Sentinel downloaded products saved S2_output_dir. Data files (Trapezoid coefficients STR-VI data) data_output_dir Products can downloaded covering two \"period\" options: either \"full\" - available images from_date to_date \"seasonal\" - available images years months day/month from_date day/month to_date. Use optram_options set option. Three trapezoid fitting methods implemented: \"linear\", \"exponential\" \"polynomial\". See optram_options function details Two SWIR wavelength bands available Sentinel-2: 1610 nanometer (nm) 2190 nm. option SWIR_bands can set optram_options choose band used model. Several vegetation indices implemented: \"NDVI\", \"SAVI\", etc. optram_optionsfunction also sets option.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Sentinel Imagery for Soil Moisture Prediction Using OPTRAM. ‚Äî optram","text":"","code":"if (FALSE) { # \\dontrun{ from_date <- \"2018-12-01\" to_date <- \"2020-04-30\" aoi <- sf::st_read(system.file(\"extdata\",                               \"lachish.gpkg\", package = \"rOPTRAM\")) rmse <- optram(aoi,                from_date, to_date) } # }"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_acquire_s2.html","id":null,"dir":"Reference","previous_headings":"","what":"Acquire Sentinel 2 Images at a Given Location and Date Range ‚Äî optram_acquire_s2","title":"Acquire Sentinel 2 Images at a Given Location and Date Range ‚Äî optram_acquire_s2","text":"Use CDSE package acquire, preprocess crop Sentinel 2 satellite imagery.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_acquire_s2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Acquire Sentinel 2 Images at a Given Location and Date Range ‚Äî optram_acquire_s2","text":"","code":"optram_acquire_s2(   aoi,   from_date,   to_date,   output_dir = tempdir(),   scale_factor = 10000,   save_creds = TRUE,   clientid = NULL,   secret = NULL )"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_acquire_s2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Acquire Sentinel 2 Images at a Given Location and Date Range ‚Äî optram_acquire_s2","text":"aoi, sf POLYGON MULTIPOLYGON, boundary area interest from_date, string, represents start date range, formatted \"YYYY-MM-DD\" to_date, string, end date range, formatted \"YYYY-MM-DD\" output_dir, string, path save processed imagery. scale_factor, numeric, scale factor reflectance values. Default 10000. save_creds, logical, whether save CDSE credentials. Default TRUE. clientid, string, user's OAuth client id. Required save_creds TRUE. secret, string, user's OAuth secret. Required save_creds TRUE.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_acquire_s2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Acquire Sentinel 2 Images at a Given Location and Date Range ‚Äî optram_acquire_s2","text":"output_paths, strings, list downloaded (STR) files","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_acquire_s2.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Acquire Sentinel 2 Images at a Given Location and Date Range ‚Äî optram_acquire_s2","text":"wrapper function calls one multiple download functions, accessing different cloud-based resource. cloud based resource can one \"scihub\" \"openeo\": \"scihub\",... \"scihub\" : function utilizes CDSE package. Make sure install CDSE jsonlite packages. Create OAuth account token: Creating Account: Navigate Copernicus portal. Click \"Register\" button access account creation page. already registered, enter username password, click \"Login.\" logged , go User dashboard click \"User Settings\" access Settings page. Creating OAuth Client: Settings page, click green \"Create New\" button located right. Enter suitable \"Client Name\" click green \"Create Client\" button. Client secret generated. user must save secret clientid somewhere. credentials saved automatically standard filesystem location user calls check_scihub() argument save_creds set TRUE (recommended). user chooses save credentials standard filesystem location, need add clientid secret acquire_scihub() function call. Using Credentials aquire_scihub(): Now, can utilize generated clientid secret aquire_scihub() function. want store credentials computer, ensure running aquire_scihub, save_creds parameter set TRUE. first run aquire_scihub(), manually input clientid secret function's signature. Subsequent runs use stored credentials. Using Credentials aquire_scihub(): Now, can utilize generated clientid secret aquire_scihub() function. want store credentials computer, ensure running aquire_scihub, save_creds parameter set TRUE. first run aquire_scihub(), manually input clientid secret function's signature. Subsequent runs use stored credentials. Subject Area Constraint: downloadable images restricted maximum size 2500 pixels side. limitation established due final resolution set 10 meters using JavaScript. Consequently, subject area available download limited 25 kilometers directions. Please aware restriction selecting desired area download. Area Interest (AOI) Specification: defining Area Interest (AOI), please ensure represented POLYGON MULTIPOLYGON layer. \"openeo\",... \"openeo\" : function utilizes openeo package. Instructions login process: First , authenticate account backend Copernicus Data Space Ecosystem, necessary complete registration process. Follow instructions registration: https://documentation.dataspace.copernicus.eu/Registration.html registered installed openeo package, can run acquire_openeo() function. process connecting server logging , need follow steps: message \"Press  proceed:\" appears console, press enter. Calling method opens system web browser, can authenticate back-end authentication system. , website give instructions go back R client, connection logged account . means every call comes via connection variable executed user account. redirected https://identity.dataspace.copernicus.eu/. Ensure account logged . required grant access - press \"yes\". Two SWIR bands available Sentinel-2: 1610 nanometer (nm) 2190 nm. Setting option SWIR_bands optram_options allows choose band used model.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_acquire_s2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Acquire Sentinel 2 Images at a Given Location and Date Range ‚Äî optram_acquire_s2","text":"","code":"if (FALSE) { # \\dontrun{ from_date <- \"2018-12-01\" to_date <- \"2019-04-30\" aoi <- sf::st_read(system.file(\"extdata\",                               \"lachish.gpkg\", package = 'rOPTRAM')) aoi <- sf::st_as_sf(sf::st_union(aoi)) s2_file_list <- optram_acquire_s2(aoi,                                  from_date, to_date) } # }"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_calculate_soil_moisture.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Soil Moisture Grid ‚Äî optram_calculate_soil_moisture","title":"Calculate Soil Moisture Grid ‚Äî optram_calculate_soil_moisture","text":"Prepare soil moisture grid STR VI images single date using derived slope intercept coefficients","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_calculate_soil_moisture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Soil Moisture Grid ‚Äî optram_calculate_soil_moisture","text":"","code":"optram_calculate_soil_moisture(   img_date,   VI_dir,   STR_dir,   data_dir,   output_dir = tempdir() )"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_calculate_soil_moisture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Soil Moisture Grid ‚Äî optram_calculate_soil_moisture","text":"img_date, string, image date single Sentinel 2 acquisition formatted \"YYYY-MM-DD\" VI_dir, string, full path directory holding VI rasters STR_dir, string, full path directory holding STR rasters data_dir, string, directory coefficients file saved (output_dir parameter optram_wetdry_coefficients function) output_dir, string, full path output directory saving soil moisture raster","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_calculate_soil_moisture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Soil Moisture Grid ‚Äî optram_calculate_soil_moisture","text":"SpatRaster, raster soil moisture, file(s) saved output_dir","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_calculate_soil_moisture.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate Soil Moisture Grid ‚Äî optram_calculate_soil_moisture","text":"function used preparing OPTRAM model coefficients : optram_wetdry_coefficients. Typically new image date, (possibly image used preparing model), referenced img_date parameter. resulting soil moisture raster saved output_dir. Three trapezoid models offered trapezoid_method option: either \"linear\", \"exponential\", \"polynomial\". (set using optram_options) data_dir parameter directory name. coefficients CSV file matches trapezoid_method directory details see: Ambrosone, Mariapaola, et al. 2020. ‚ÄúRetrieving Soil Moisture Rainfed Irrigated Fields Using Sentinel-2 Observations Modified OPTRAM Approach.‚Äù International Journal Applied Earth Observation Geoinformation 89 (July): 102113. doi:10.1016/j.jag.2020.102113 . data_dir directory must contain coefficients CSV file .e. \"linear\" method file saved 'coefficients_lin.csv' \"exponential\" saved 'coefficients_exp.csv' \"polynomial\" saved 'coefficients_poly.csv'","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_calculate_soil_moisture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Soil Moisture Grid ‚Äî optram_calculate_soil_moisture","text":"","code":"img_date <- \"2023-03-11\" VI_dir <- system.file(\"extdata\", \"NDVI\", package = \"rOPTRAM\") STR_dir <- system.file(\"extdata\", \"STR\", package = \"rOPTRAM\") data_dir <- system.file(\"extdata\") SM <- optram_calculate_soil_moisture(img_date,       VI_dir, STR_dir, data_dir) #> No data directory:"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_calculate_str.html","id":null,"dir":"Reference","previous_headings":"","what":"Create SWIR Transformed Reflectance ‚Äî optram_calculate_str","title":"Create SWIR Transformed Reflectance ‚Äî optram_calculate_str","text":"Create SWIR Transformed Reflectance","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_calculate_str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create SWIR Transformed Reflectance ‚Äî optram_calculate_str","text":"","code":"optram_calculate_str(BOA_dir, STR_dir = NULL)"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_calculate_str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create SWIR Transformed Reflectance ‚Äî optram_calculate_str","text":"BOA_dir, string, path Bottom Atmosphere bands STR_dir, string, output directory STR rasters, Default NULL, case, STR_dir created alongside BOA_dir","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_calculate_str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create SWIR Transformed Reflectance ‚Äî optram_calculate_str","text":"list string, path transformed raster","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_calculate_str.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create SWIR Transformed Reflectance ‚Äî optram_calculate_str","text":"function follows: Sadeghi, M., Babaeian, E., Tuller, M., Jones, S.B., 2017. optical trapezoid model: novel approach remote sensing soil moisture applied Sentinel-2 Landsat-8 observations. Remote Sensing Environment 198, 52‚Äì68. doi:10.1016/j.rse.2017.05.041 SWIR Transformed Reflectance calculated STR = (1-SWIR)^2 / 2*SWIR SWIR band 12 (2190 nm) 11 (1610 nm)","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_calculate_str.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create SWIR Transformed Reflectance ‚Äî optram_calculate_str","text":"","code":"BOA_dir <- system.file(\"extdata\", \"BOA\", package = \"rOPTRAM\") STR_dir = tempdir() STR <- optram_calculate_str(BOA_dir, STR_dir) #> Prepared: 20 STR files"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_landsat.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle Satellite Imagery in Original Landsat Format ‚Äî optram_landsat","title":"Handle Satellite Imagery in Original Landsat Format ‚Äî optram_landsat","text":"Use function prepare vegetation index SWIR Transformed Reflectance (STR) rasters already downloaded Landsat image files advance. function assumes atmospheric correction applied.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_landsat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle Satellite Imagery in Original Landsat Format ‚Äî optram_landsat","text":"","code":"optram_landsat(   landsat_dir,   aoi,   LC_output_dir = tempdir(),   data_output_dir = tempdir() )"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_landsat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle Satellite Imagery in Original Landsat Format ‚Äî optram_landsat","text":"landsat_dir, string, full path containing folder downloaded (unzipped) Landsat data original landsat format, atmospheric correction (L2A) aoi, sf object, POLYGON MULTIPOLYGON AOI boundary area interest LC_output_dir, string, directory save derived products, defaults tempdir() data_output_dir, string, path save coeffs_file STR-VI data.frame, default tempdir()","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_landsat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle Satellite Imagery in Original Landsat Format ‚Äî optram_landsat","text":"rmse_df, data.frame, RMSE values fitted trapezoid edges","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_landsat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Handle Satellite Imagery in Original Landsat Format ‚Äî optram_landsat","text":"Unlike optram_acquire_s2 function, implementation automatic download Landsat images. function requires directory, set landsat_dir parameter, contains set Landsat tiles downloaded manually user, advance. directory contain folders Landsat images, folder consists individual Landsat bands Geotiff files, well metadata files downloaded , .e. USGS EarthExplorer https://earthexplorer.usgs.gov/ website.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_landsat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Handle Satellite Imagery in Original Landsat Format ‚Äî optram_landsat","text":"","code":"if (FALSE) { # \\dontrun{ aoi <- sf::st_read(system.file(\"extdata\",                               \"lachish.gpkg\", package = \"rOPTRAM\")) # landsat_dir is a directory containing the original downloaded Landsat images. landsat_dir <- \"...enter full path here...\" optram_landsat(landsat_dir,  aoi,                veg_index = 'SAVI',                LC_output_dir = tempdir(), data_output_dir = tempdir()) } # }"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_ndvi_str.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Dataframe with Pairs of NDVI and STR Values ‚Äî optram_ndvi_str","title":"Prepare Dataframe with Pairs of NDVI and STR Values ‚Äî optram_ndvi_str","text":"Collect pixel values vegetation index, Swir Transformed Reflectance, time series images. Prepare data.frame pairs values (input optram_wetdry_coefficients function)","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_ndvi_str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Dataframe with Pairs of NDVI and STR Values ‚Äî optram_ndvi_str","text":"","code":"optram_ndvi_str(STR_list, VI_list, output_dir = tempdir(), aoi = NULL)"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_ndvi_str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Dataframe with Pairs of NDVI and STR Values ‚Äî optram_ndvi_str","text":"STR_list, list paths STR raster files VI_list, list paths NDVI raster files output_dir, string, path save data.frames (RDS format) aoi, sf POLYGON MULTIPOLYGON, must numeric column named \"ID\" coloring trapezoid points features Default NULL, (coloring)","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_ndvi_str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Dataframe with Pairs of NDVI and STR Values ‚Äî optram_ndvi_str","text":"full_df, data.frame 7 columns: X,Y,Date,Month,NDVI,STR,Density optionally 7th column feature ID values AOI polygon. columns Month, Density, Feature_ID  can used plot_vi_str_cloud() function color points scatter plot various ways.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_ndvi_str.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Prepare Dataframe with Pairs of NDVI and STR Values ‚Äî optram_ndvi_str","text":"Use option max_tbl_size (see optram_options) limit size NDVI-STR data.frame. large area interest, long time frame, number data points can overrun computation resources. parameter sets total size data.frame max_tbl_size parameter, together number image time slots time range. cases (.e. water surfaces) NDVI can values zero. pixels can removed trapezoid setting rm.low.vi option TRUE. vegetation index column named \"NDVI\" even though can represent vegetation indices, SAVI, MSAVI.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_ndvi_str.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Dataframe with Pairs of NDVI and STR Values ‚Äî optram_ndvi_str","text":"","code":"VI_list <- list.files(system.file(\"extdata\", \"NDVI\", package = \"rOPTRAM\"),         pattern = \".tif$\", full.names = TRUE) STR_list <- list.files(system.file(\"extdata\", \"STR\", package = \"rOPTRAM\"),         pattern = \".tif$\", full.names = TRUE) full_df <- optram_ndvi_str(STR_list, VI_list) #> Saved: 96360 rows of VI-STR data to: /tmp/Rtmp59zvxH/VI_STR_data.rds # Show structure of output data.frame str(full_df) #> 'data.frame':\t96360 obs. of  8 variables: #>  $ x      : num  34.9 34.9 34.9 34.9 34.9 ... #>  $ y      : num  31.6 31.6 31.6 31.6 31.6 ... #>  $ VI     : num  0.432 0.418 0.428 0.528 0.538 ... #>  $ STR    : num  1.72 1.95 1.96 2.11 2.13 ... #>  $ Date   : Date, format: \"2022-11-11\" \"2022-11-11\" ... #>  $ Tile   : chr  \"T36RXV\" \"T36RXV\" \"T36RXV\" \"T36RXV\" ... #>  $ Month  : chr  \"11\" \"11\" \"11\" \"11\" ... #>  $ Density: num  0.565 0.374 0.328 0.49 0.495 ..."},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Display or Set Package Options ‚Äî optram_options","title":"Display or Set Package Options ‚Äî optram_options","text":"rOPTRAM uses several package options. function displays current defined options, (showing default options package first loaded), allows users set new values option.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display or Set Package Options ‚Äî optram_options","text":"","code":"optram_options(opt_name = NULL, opt_value = NULL, show_opts = TRUE)"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display or Set Package Options ‚Äî optram_options","text":"opt_name, string, one package options. Default NULL opt_value, string, numeric, boolean, depending opt_name. show_opts, boolean, default TRUE, prints list optram options Default NULL","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_options.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Display or Set Package Options ‚Äî optram_options","text":"new option name value specified, list currently defined options printed. rOPTRAM defines following options startup","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display or Set Package Options ‚Äî optram_options","text":"","code":"opts <- options() optram_options()      # prints out list of current options #> [1] \"SWIR_band = 11\" #> [1] \"edge_points = TRUE\" #> [1] \"feature_col = ID\" #> [1] \"max_cloud = 12\" #> [1] \"max_tbl_size = 1e+06\" #> [1] \"only_vi_str = FALSE\" #> [1] \"overwrite = FALSE\" #> [1] \"period = full\" #> [1] \"plot_colors = no\" #> [1] \"remote = scihub\" #> [1] \"rm.hi.str = FALSE\" #> [1] \"rm.low.vi = FALSE\" #> [1] \"scm_mask = TRUE\" #> [1] \"tileid = NA\" #> [1] \"trapezoid_method = linear\" #> [1] \"veg_index = NDVI\" #> [1] \"vi_step = 0.005\" #> NULL optram_options(\"SWIR_band\", 12) #>  #> Option for: SWIR_band set to: 12 #> [1] \"SWIR_band = 12\" #> [1] \"edge_points = TRUE\" #> [1] \"feature_col = ID\" #> [1] \"max_cloud = 12\" #> [1] \"max_tbl_size = 1e+06\" #> [1] \"only_vi_str = FALSE\" #> [1] \"overwrite = FALSE\" #> [1] \"period = full\" #> [1] \"plot_colors = no\" #> [1] \"remote = scihub\" #> [1] \"rm.hi.str = FALSE\" #> [1] \"rm.low.vi = FALSE\" #> [1] \"scm_mask = TRUE\" #> [1] \"tileid = NA\" #> [1] \"trapezoid_method = linear\" #> [1] \"veg_index = NDVI\" #> [1] \"vi_step = 0.005\" optram_options(\"veg_index\", \"SAVI\") #>  #> Option for: veg_index set to: SAVI #> [1] \"SWIR_band = 12\" #> [1] \"edge_points = TRUE\" #> [1] \"feature_col = ID\" #> [1] \"max_cloud = 12\" #> [1] \"max_tbl_size = 1e+06\" #> [1] \"only_vi_str = FALSE\" #> [1] \"overwrite = FALSE\" #> [1] \"period = full\" #> [1] \"plot_colors = no\" #> [1] \"remote = scihub\" #> [1] \"rm.hi.str = FALSE\" #> [1] \"rm.low.vi = FALSE\" #> [1] \"scm_mask = TRUE\" #> [1] \"tileid = NA\" #> [1] \"trapezoid_method = linear\" #> [1] \"veg_index = SAVI\" #> [1] \"vi_step = 0.005\" optram_options(\"trapezoid_list\", \"exp\")  # fails #>  #> Unknown option name: trapezoid_list options(opts)"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_prepare_other_vi_str.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle Third Party Imagery With Red, NIR and SWIR Bands ‚Äî optram_prepare_other_vi_str","title":"Handle Third Party Imagery With Red, NIR and SWIR Bands ‚Äî optram_prepare_other_vi_str","text":"function prepares vegetation index STR rasters (non-Sentinel) image files downloaded advance.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_prepare_other_vi_str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle Third Party Imagery With Red, NIR and SWIR Bands ‚Äî optram_prepare_other_vi_str","text":"","code":"optram_prepare_other_vi_str(   img_dir,   aoi,   viname = \"NDVI\",   output_dir = tempdir() )"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_prepare_other_vi_str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle Third Party Imagery With Red, NIR and SWIR Bands ‚Äî optram_prepare_other_vi_str","text":"img_dir, string, full path directory downloaded images (assumes Geotiff) aoi, string, full path polygon spatial file area interest viname, string, VI prepare, 'NDVI', 'SAVI', etc. output_dir, string, save Geotiff, default tempdir()","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_prepare_other_vi_str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle Third Party Imagery With Red, NIR and SWIR Bands ‚Äî optram_prepare_other_vi_str","text":"output_files, list, full paths saved Geotiff files (exported yet)","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_safe.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle Sentinel Imagery in Original Copernicus SAFE Format ‚Äî optram_safe","title":"Handle Sentinel Imagery in Original Copernicus SAFE Format ‚Äî optram_safe","text":"Use function prepares vegetation index SWIR Transformed Reflectance (STR) rasters already downloaded Sentinel 2 image files advance. Unzip downloaded Sentinel 2 files change folder structure. function assumes atmospheric correction applied. .e. downloading Level L2A product using SNAP L2A_Process,","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_safe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle Sentinel Imagery in Original Copernicus SAFE Format ‚Äî optram_safe","text":"","code":"optram_safe(   safe_dir,   aoi,   S2_output_dir = tempdir(),   overwrite = TRUE,   data_output_dir = tempdir() )"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_safe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle Sentinel Imagery in Original Copernicus SAFE Format ‚Äî optram_safe","text":"safe_dir, string, full path containing folder downloaded (unzipped) Sentinel 2 data original SAFE format, atmospheric correction (L2A) aoi, sf object, POLYGON MULTIPOLYGON AOI boundary S2_output_dir, string, directory save derived products, defaults tempdir() overwrite, boolean, overwrite derived products already created, defaults TRUE data_output_dir, string, path save coeffs_file STR-VI data.frame, default tempdir()","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_safe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle Sentinel Imagery in Original Copernicus SAFE Format ‚Äî optram_safe","text":"rmse_df, data.frame, RMSE values fitted trapezoid lines","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_safe.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Handle Sentinel Imagery in Original Copernicus SAFE Format ‚Äî optram_safe","text":"Use max_tbl_size parameter limit total number rows VI-STR data.frame. area interest large, time range datasets long, total size data.frame can grow beyond capacity computation resources. parameter limits size table sampling number data points time slot. sample size determined based max_tbl_size total number time slots full time range. Two SWIR bands available Sentinel-2: 1610 nanometer (nm) 2190 nm. Set band use optram_options.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_safe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Handle Sentinel Imagery in Original Copernicus SAFE Format ‚Äî optram_safe","text":"","code":"if (FALSE) { # \\dontrun{ aoi <- sf::st_read(system.file(\"extdata\",                   \"lachish.gpkg\", package = \"rOPTRAM\")) safe_dir  <- \"...enter directory containing downloaded SAFE folders...\" rmse <- optram_safe(safe_dir, aoi_file) } # }"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_wetdry_coefficients.html","id":null,"dir":"Reference","previous_headings":"","what":"Derive Coefficients of Slope and Intercept ‚Äî optram_wetdry_coefficients","title":"Derive Coefficients of Slope and Intercept ‚Äî optram_wetdry_coefficients","text":"Derive slope intercept coefficients wet dry trapezoid lines. Write coefficients CSV file (input optram_calculate_soil_moisture function)","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_wetdry_coefficients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derive Coefficients of Slope and Intercept ‚Äî optram_wetdry_coefficients","text":"","code":"optram_wetdry_coefficients(full_df, output_dir = tempdir())"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_wetdry_coefficients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derive Coefficients of Slope and Intercept ‚Äî optram_wetdry_coefficients","text":"full_df, data.frame STR NDVI values output_dir, string, directory save coefficients CSV file","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_wetdry_coefficients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derive Coefficients of Slope and Intercept ‚Äî optram_wetdry_coefficients","text":"rmse_df, data.frame,  RMSE values fitted trapezoid edges","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_wetdry_coefficients.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Derive Coefficients of Slope and Intercept ‚Äî optram_wetdry_coefficients","text":"vegetation index column named \"VI\" though can represent several vegetation indices, SAVI, MSAVI. trapezoid method option (see optram_options) allows choose one three models creating edge coefficients trapezoid. \"linear\" prepares simple OLS regression line along wet dry edges trapezoid. Four coefficients returned: intercept slope edges. \"exponential\" creates exponential curve fitted intercept slope, following: Ambrosone, Mariapaola, Alessandro Matese, et al. 2020. ‚ÄúRetrieving Soil Moisture Rainfed Irrigated Fields Using Sentinel-2 Observations Modified OPTRAM Approach.‚Äù International Journal Applied Earth Observation Geoinformation doi:10.1016/j.jag.2020.102113 . \"polynomial\" fits second order polynomial curve wet dry edges trapezoid, following: Ma, Chunfeng, Kasper Johansen, Matthew F. McCabe. 2022. ‚ÄúCombining Sentinel-2 Data Optical-Trapezoid Approach Infer within-Field Soil Moisture Variability Monitor Agricultural Production Stages.‚Äù Agricultural Water Management 274 (December): 107942. doi:10.1016/j.agwat.2022.107942  curve fitting function returns six coefficients: alpha, beta_1, beta_2 wet dry edges","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/optram_wetdry_coefficients.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Derive Coefficients of Slope and Intercept ‚Äî optram_wetdry_coefficients","text":"","code":"full_df <- readRDS(system.file(\"extdata\", \"VI_STR_data.rds\",   package = \"rOPTRAM\")) rmse_df <- optram_wetdry_coefficients(full_df, tempdir()) #> VI series length:105 print(rmse_df) #>    RMSE.wet  RMSE.dry #> 1 0.1642536 0.1018425 optram_options(\"trapezoid_method\", \"polynomial\") #>  #> Option for: trapezoid_method set to: polynomial #> [1] \"SWIR_band = 11\" #> [1] \"edge_points = TRUE\" #> [1] \"feature_col = ID\" #> [1] \"max_cloud = 12\" #> [1] \"max_tbl_size = 1e+06\" #> [1] \"only_vi_str = FALSE\" #> [1] \"overwrite = FALSE\" #> [1] \"period = full\" #> [1] \"plot_colors = no\" #> [1] \"remote = scihub\" #> [1] \"rm.hi.str = FALSE\" #> [1] \"rm.low.vi = FALSE\" #> [1] \"scm_mask = TRUE\" #> [1] \"tileid = NA\" #> [1] \"trapezoid_method = polynomial\" #> [1] \"veg_index = NDVI\" #> [1] \"vi_step = 0.005\" rmse_df <- optram_wetdry_coefficients(full_df, tempdir()) #> VI series length:105 print(rmse_df) #>    RMSE.wet   RMSE.dry #> 1 0.1628496 0.07835765"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/plot_vi_str_cloud.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Scatter Plot of STR-NDVI Data Points, ‚Äî plot_vi_str_cloud","title":"Create Scatter Plot of STR-NDVI Data Points, ‚Äî plot_vi_str_cloud","text":"Plot STR-NDVI scatterplot show dry wet trapezoid lines scatterplot multi-temporal STR NDVI pixel values","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/plot_vi_str_cloud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Scatter Plot of STR-NDVI Data Points, ‚Äî plot_vi_str_cloud","text":"","code":"plot_vi_str_cloud(full_df, edges_df, edge_points = FALSE)"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/plot_vi_str_cloud.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Scatter Plot of STR-NDVI Data Points, ‚Äî plot_vi_str_cloud","text":"full_df, data.frame NDVI STR pixel values edges_df, data.frame, points along wet/dry edges trapezoid edge_points, boolean, whether add plot linear regression points used derive coefficients. default FALSE","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/plot_vi_str_cloud.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Scatter Plot of STR-NDVI Data Points, ‚Äî plot_vi_str_cloud","text":"ggplot object","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/plot_vi_str_cloud.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create Scatter Plot of STR-NDVI Data Points, ‚Äî plot_vi_str_cloud","text":"Points scatter plot can colored various ways, depending plot_colors option, set optram_options() \"plot_colors = none\" points colored green. \"plot_colors = density\" points colored point density plot. \"plot_colors = contour\" points colored green density contour lines overlayed \"plot_colors = feature\" points colored feature ID original AOI polygon. \"plot_colors = month\" points colored month image acquisition.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/plot_vi_str_cloud.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Scatter Plot of STR-NDVI Data Points, ‚Äî plot_vi_str_cloud","text":"","code":"aoi_name <- \"Soil Moisture AOI\" optram_options(\"trapezoid_method\", \"polynomial\") #>  #> Option for: trapezoid_method set to: polynomial #> [1] \"SWIR_band = 11\" #> [1] \"edge_points = TRUE\" #> [1] \"feature_col = ID\" #> [1] \"max_cloud = 12\" #> [1] \"max_tbl_size = 1e+06\" #> [1] \"only_vi_str = FALSE\" #> [1] \"overwrite = FALSE\" #> [1] \"period = full\" #> [1] \"plot_colors = no\" #> [1] \"remote = scihub\" #> [1] \"rm.hi.str = FALSE\" #> [1] \"rm.low.vi = FALSE\" #> [1] \"scm_mask = TRUE\" #> [1] \"tileid = NA\" #> [1] \"trapezoid_method = polynomial\" #> [1] \"veg_index = NDVI\" #> [1] \"vi_step = 0.005\" full_df <- readRDS(system.file(\"extdata\", \"VI_STR_data.rds\",         package = \"rOPTRAM\")) edges_df <- read.csv(system.file(\"extdata\", \"trapezoid_edges_lin.csv\",                         package = \"rOPTRAM\")) pl <- plot_vi_str_cloud(full_df, edges_df) #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x' #> Warning: Removed 80 rows containing missing values or values outside the scale range #> (`geom_point()`).  pl + ggplot2::ggtitle(paste(\"Trapezoid plot for:\", aoi_name)) #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x' #> Warning: Removed 80 rows containing missing values or values outside the scale range #> (`geom_point()`).  pl #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x' #> Warning: Removed 80 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://docs.ropensci.org/rOPTRAM/reference/polynomial_coefficients.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility Function to Prepare Polynomial Fitted Edges of Trapezoid ‚Äî polynomial_coefficients","title":"Utility Function to Prepare Polynomial Fitted Edges of Trapezoid ‚Äî polynomial_coefficients","text":"Called optram_wetdry_coefficients prepare second order polynomial curve along trapezoid edges Calculates six coefficients:  intercept (alpha)  wet dry edges first second order coefficients (beta), \\(STR = alpha + beta_1 * VI + beta_2 * VI^2\\) updates edges data.frame polynomila values fitted values","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/polynomial_coefficients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility Function to Prepare Polynomial Fitted Edges of Trapezoid ‚Äî polynomial_coefficients","text":"","code":"polynomial_coefficients(df, output_dir)"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/polynomial_coefficients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility Function to Prepare Polynomial Fitted Edges of Trapezoid ‚Äî polynomial_coefficients","text":"df, data.frame, values VI STR along edges trapezoid output_dir, string, path save coefficients CSV file","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/polynomial_coefficients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility Function to Prepare Polynomial Fitted Edges of Trapezoid ‚Äî polynomial_coefficients","text":"df, data.frame, trapezoid line edge points fitted values added wet dry edges","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/polynomial_coefficients.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Utility Function to Prepare Polynomial Fitted Edges of Trapezoid ‚Äî polynomial_coefficients","text":"Three CSV files saved: regressions coefficients, trapezoid edge points RMSE fitted curve","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/polynomial_coefficients.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility Function to Prepare Polynomial Fitted Edges of Trapezoid ‚Äî polynomial_coefficients","text":"","code":"if (FALSE) { # \\dontrun{   df <- read.csv(system.file(\"extdata\", \"trapezoid_edges.csv\",                   package = \"rOPTRAM\"))   output_dir <- tempdir()   coeffs <- rOPTRAM::polynomial_coefficients(df, output_dir)   coeffs  } # }"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/polynomial_soil_moisture.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Soil Moisture, Polynomial Fitted Curve ‚Äî polynomial_soil_moisture","title":"Calculate Soil Moisture, Polynomial Fitted Curve ‚Äî polynomial_soil_moisture","text":"Prepare soil moisture grid STR VI images single date, based polynomial function fitted trapezoid edges.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/polynomial_soil_moisture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Soil Moisture, Polynomial Fitted Curve ‚Äî polynomial_soil_moisture","text":"","code":"polynomial_soil_moisture(coeffs, VI, STR)"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/polynomial_soil_moisture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Soil Moisture, Polynomial Fitted Curve ‚Äî polynomial_soil_moisture","text":"coeffs, list, 6 trapezoid coefficients VI, terra rast, vegetation index raster STR, terra rast, STR raster","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/polynomial_soil_moisture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Soil Moisture, Polynomial Fitted Curve ‚Äî polynomial_soil_moisture","text":"rast, soil moisture grid","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/polynomial_soil_moisture.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate Soil Moisture, Polynomial Fitted Curve ‚Äî polynomial_soil_moisture","text":"function used preparing OPTRAM model coefficients : optram_wetdry_coefficients. Typically new image date,  (used preparing model), referenced img_date parameter. resulting soil moisture raster saved output_dir function implements polynomial fitted curve, following: Ma, Chunfeng, Kasper Johansen, Matthew F. McCabe. 2022. ‚ÄúCombining Sentinel-2 Data Optical-Trapezoid Approach Infer within-Field Soil Moisture Variability Monitor Agricultural Production Stages.‚Äù Agricultural Water Management 274 (December): 107942. doi:10.1016/j.agwat.2022.107942 .","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/polynomial_soil_moisture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Soil Moisture, Polynomial Fitted Curve ‚Äî polynomial_soil_moisture","text":"","code":"img_date <- \"2023-03-11\" VI_dir <- system.file(\"extdata\", \"NDVI\", package = \"rOPTRAM\") STR_dir <- system.file(\"extdata\", \"STR\", package = \"rOPTRAM\") optram_options(\"trapezoid_method\", \"polynomial\") #>  #> Option for: trapezoid_method set to: polynomial #> [1] \"SWIR_band = 11\" #> [1] \"edge_points = TRUE\" #> [1] \"feature_col = ID\" #> [1] \"max_cloud = 12\" #> [1] \"max_tbl_size = 1e+06\" #> [1] \"only_vi_str = FALSE\" #> [1] \"overwrite = FALSE\" #> [1] \"period = full\" #> [1] \"plot_colors = no\" #> [1] \"remote = scihub\" #> [1] \"rm.hi.str = FALSE\" #> [1] \"rm.low.vi = FALSE\" #> [1] \"scm_mask = TRUE\" #> [1] \"tileid = NA\" #> [1] \"trapezoid_method = polynomial\" #> [1] \"veg_index = NDVI\" #> [1] \"vi_step = 0.005\" SM <- optram_calculate_soil_moisture(img_date,                           VI_dir, STR_dir,                           data_dir = tempdir()) #> Multiple tiles created:  #> /tmp/Rtmp59zvxH/soil_moisture_2023-03-11_T36RXV.tif/tmp/Rtmp59zvxH/soil_moisture_2023-03-11_T36SXA.tif"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/rOPTRAM-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rOPTRAM: Derive Soil Moisture Using the OPTRAM Algorithm ‚Äî rOPTRAM-package","title":"rOPTRAM: Derive Soil Moisture Using the OPTRAM Algorithm ‚Äî rOPTRAM-package","text":"OPtical TRapezoid Model (OPTRAM) derives soil moisture based linear relation vegetation index Land Surface Temperature (LST). Short Wave Infra-red (SWIR) band used proxy LST. See: Sadeghi, M. et al., 2017. https://doi.org/10.1016/j.rse.2017.05.041 .","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rOPTRAM/reference/rOPTRAM-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rOPTRAM: Derive Soil Moisture Using the OPTRAM Algorithm ‚Äî rOPTRAM-package","text":"Maintainer: Micha Silver silverm@post.bgu.ac.il (ORCID) contributors: Arnon Karnieli karnieli@bgu.ac.il (ORCID) [contributor, funder] Zhe Dong dongzhe053@gmail.com (ORCID) [contributor] Ron Beiden beiden@post.bgu.ac.il [contributor] Natalya Panov npanov@bgu.ac.il [contributor] Zhe Dong dongzhe053@gmail.com (ORCID) [contributor] Lauren O'Brien obrlsoilau@gmail.com [reviewer] Harry Eslick harry@wineandtruffle.com.au [reviewer]","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/retrieve_cdse_credentials.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve CDSE Client Credentials from File ‚Äî retrieve_cdse_credentials","title":"Retrieve CDSE Client Credentials from File ‚Äî retrieve_cdse_credentials","text":"Retrieve CDSE clientid secret file file location system specific. setup advance using store_cdse_credentials function","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/retrieve_cdse_credentials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve CDSE Client Credentials from File ‚Äî retrieve_cdse_credentials","text":"","code":"retrieve_cdse_credentials()"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/retrieve_cdse_credentials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve CDSE Client Credentials from File ‚Äî retrieve_cdse_credentials","text":"data frame containing retrieved CDSE clientid secret, NULL credentials available.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/store_cdse_credentials.html","id":null,"dir":"Reference","previous_headings":"","what":"Store CDSE Client Credentials ‚Äî store_cdse_credentials","title":"Store CDSE Client Credentials ‚Äî store_cdse_credentials","text":"Store CDSE clientid secret file file location system specific. Users chose save CDSE credentials can use function (retrieve_cdse_credentials afterwards) clientid secret obtained :","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/store_cdse_credentials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store CDSE Client Credentials ‚Äî store_cdse_credentials","text":"","code":"store_cdse_credentials(clientid = NULL, secret = NULL)"},{"path":"https://docs.ropensci.org/rOPTRAM/reference/store_cdse_credentials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store CDSE Client Credentials ‚Äî store_cdse_credentials","text":"clientid, string, user's OAuth client id secret, string, user's OAuth secret","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/store_cdse_credentials.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Store CDSE Client Credentials ‚Äî store_cdse_credentials","text":"clientid secret can alternatively supplied environment variables: OAUTH_CLIENTID OAUTH_SECRET. env variables available (values entered function arguments) used store credentials.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/reference/store_cdse_credentials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Store CDSE Client Credentials ‚Äî store_cdse_credentials","text":"","code":"if (FALSE) { # \\dontrun{ store_cdse_credentials(clientid=\"<...enter your client id...>\",                       secret = \"<...enter your secret...>\") } # }"},{"path":[]},{"path":"https://docs.ropensci.org/rOPTRAM/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rOPTRAM 0.3.0 (2024-08-15)","text":"","code":"* Adds option to filter out clouds, cloud shadows, water, using the Sentinel-2 SCM mask layer. * Implements check for existing STR and VI files to avoid downloading again and overwriting."},{"path":[]},{"path":"https://docs.ropensci.org/rOPTRAM/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rOPTRAM 0.2.0 (2024-07-02)","text":"Implements optram_options() function allow setting many algorithm options applied throughout model. Implements four coloring options VI-STR scatter plot: colors point density, colors categorical attribute column aoi polygon, colors image date, uniform color contour lines point density, Adds tileid (Sentinel-2 tiles) downloaded images. allows save images adjacent tiles AOI extends beyond single tile. CDSE function GetArchiveImage() deprecated. version rOPTRAM uses new GetImage() function.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/news/index.html","id":"roptram-020-2024-06-06","dir":"Changelog","previous_headings":"","what":"rOPTRAM 0.2.0 (2024-06-06)","title":"rOPTRAM 0.2.0 (2024-06-06)","text":"FIRST RELEASE ROPENSCI","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/news/index.html","id":"roptram-010-2024-04-30","dir":"Changelog","previous_headings":"","what":"rOPTRAM 0.1.0 (2024-04-30)","title":"rOPTRAM 0.1.0 (2024-04-30)","text":"INITIAL RESPONSE REVIEWS","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rOPTRAM 0.1.0 (2024-04-30)","text":"Implements three curve fitting algorithms determine OPTRAM trapezoid.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/news/index.html","id":"minor-improvements-0-1-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rOPTRAM 0.1.0 (2024-04-30)","text":"Removes unnecessary tests. Requires user input area interest  object. Plot trapezoid returned  plot allow user apply tweaks.","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/news/index.html","id":"bug-fixes-0-1-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rOPTRAM 0.1.0 (2024-04-30)","text":"Fixes path images vignettes","code":""},{"path":"https://docs.ropensci.org/rOPTRAM/news/index.html","id":"documentation-fixes-0-1-0","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION FIXES","title":"rOPTRAM 0.1.0 (2024-04-30)","text":"Fixes documentation regarding download  package Edits keeping r-lib guide.","code":""}]
